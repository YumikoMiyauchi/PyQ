ある程度、設計という点で参考にして欲しい点を解説します。
設計に絶対的な答えはありません 、あくまで参考としてください。



登場人物に注目する


タスク

何かを作るときはその登場人物に注目すると良いでしょう。
「モデル」や「ドメインオブジェクト」と呼ばれることもあります。

今回は「タスク」が一番中心になります。
タスクは2つの値を持ちます。

*タスク本文
*完了/未完了

以下の機能が考えられます。

*タスクを完了にする


タスク一覧

「タスク一覧」も1つのドメインオブジェクトとして捉えても良いでしょう。
以下の値を持ちます。

*タスクの一覧

以下の機能が考えられます。

*タスクを追加する
*完了しているタスクを消去する
*完了or未完了のタスクのみ取り出す
*タスクの本文が一致するタスクを取り出す



模範解答はなぜTaskListクラスを持たないのか

模範解答では上記の設計を全て盛り込んだ実装になってるわけではありません。

Task クラスは作っていますが、 TaskList のようにタスク一覧を表すクラスは作っていません。

模範解答では「タスク一覧」を単純にPythonのリストとしています。
今回のプログラムではそこまで大きな規模にならないかなという考えで TaskList クラスは作りませんでした。
現状の模範解答ですでに重複する処理があるので、 TaskList は作ってもよでしょう。

1つお伝えしたいのは、全てをクラスに置き換える必要はありませんし、こと細かくPythonファイルを分割する必要もないということです。
設計はあくまで全体を見やすく、分かりやすくするために行うということが大切です。
また、機能追加やテストの追加をするたびにプログラムの設計も見直して成長させていくのが大切です。
