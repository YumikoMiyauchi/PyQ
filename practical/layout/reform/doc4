最後に、売上生データを読み込む処理を改善しましょう。
現状の売上生データを読み込む処理では「売上生データのファイル名はどんな名前か」がとても分かりにくいです。

そこで「売上生データのファイル名」にマッチする正規表現を書くことでプログラムを読みやすくしましょう。





SALES_RAW_REGEX に商品生データのファイル名にマッチする正規表現を書きました。
re.compile(r'...') と正規表現を事前に書いて、プログラム中で使いまわすことができます。

import re

SALES_RAW_REGEX = re.compile(r'', '')
m = SALES_RAW_REGEX.search("sales_raw_20141105.csv.")
print(m.group(1))  # '2014'
print(m.group(2))  # '11'
print(m.group(3))  # '05'

Pythonファイルの上部に「定数」として正規表現を置くことで、ファイル名の仕様としても見やすくなります。

またプログラム中では以下のif文で対象のファイルかを判定しています。

if m and m.group(1) == '2016' and m.group(2) == '11'

正規表現にマッチした
対象の年が '2016'
対象の月が '11'
if文をいくつも繋げて文字列（今回はファイル名）を判定する場合は正規表現に置き換えたほうが読みやすくなるでしょう。



定数にする

今回の SALES_RAW_REGEX は「商品生データのファイル名にマッチする正規表現」という値です。
この正規表現はプログラム中も絶対に変わることがない固定の値です。
このように共通で使える固定の値を、Pythonファイルの上部に 定数 として書くことがあります。

定数として分かりやすいように SALES_RAW のように大文字の英語で書きます。
SALES_RAW_REGEX は「商品生データの正規表現」という意味の定数名になります。
REGEX は Regular Expression 、つまり正規表現の略です。
この後にも定数はいくつか登場するので、使い所を会得しておくと良いでしょう。



定数は変更してはいけない

定数は変更してはいけません。
固定の値を定数には置いておきます。特に仕様として決まっている固定値を書いておくと良いでしょう。

定数に辞書やリストを置いた場合も CATEGORY_DICT['new'] = 'value' のように変更しないようにしましょう。
