今回のプログラムでは、以下の3つのデータが重要な役割を持っています。

*売上生データ
*商品マスターデータ
*売上データ

この役割は今回のプログラムだけでなく汎用的に使えそうです。
想像の範疇ですが、他にも商品のマスターデータを読み出すプログラムはあってもおかしくありません。

逆に今回のプログラム「ならでは」の処理は、「売上生データに商品の情報を含めて、売上データを作る」ところです。
上記3つのデータを操作する処理も別途関数に分離しましょう。

また各データのCSVのカラムの順序を定数に置くことで、プログラムを読むだけですぐにCSVの仕様が分かるようにしましょう。






さらに read_items、read_sales_raw、write_sales という関数に分離しました。
それぞれ「商品マスターデータを読み込む」「売上生データを読み込む」、「売上データを書き込む」という役割になります。

先ほどまでの「CSVファイルを読み込む・書き込む関数」よりも一般的なプログラムではありません。
ですが今回の「お仕事」の中では比較的一般的な処理です。
「商品マスターデータを読み込む」処理は他のプログラムでも使いまわせそうです。
たとえば商品の平均価格を計算するプログラムを書きたい場合などに使います。

items = read_items()
sum_price = sum(int(item['price']) for item in items)
print(sum_price / len(items))  # 商品の平均価格

さらに各CSVのカラムの順序を _COLUMNS という値としてファイルの上部にまとめています。
こうすることで各CSVの仕様がプログラムを読むだけで一目瞭然となります。

ITEMS_COLUMNS = ['item_id', 'name', 'price']




コラム: モノとして考えよう

商品マスターデータを単なる "3,商品名,380" のような文字でなく「商品」というモノとして捉えましょう。
今回 read_items 関数（商品マスターデータを返す関数）を作ったことで、さらに「商品」というモノとしての意味が強くなっています。

このようにデータを単なる文字やCSVとしての形式でなく「モノ」として考えるのはとても大切です。
プログラムを関数に分離する際の基準になりますし、変数名もつけやすくなります。
